name: CI-CD debug
on:
  push:
    branches: [debug]

permissions:
  contents: read

jobs:
  deploy:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: staging
    strategy:
      fail-fast: false
    env:
      AWS_REGION: "${{ secrets.AWS_REGION }}"
      NEXT_PUBLIC_BASE_API_PATH: "${{ secrets.NEXT_PUBLIC_BASE_API_PATH }}"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Create dotenv file
      uses: du5rte/create-secrets-file@v1
      with:
        secrets: |
          NEXT_PUBLIC_BASE_API_PATH=${{ secrets.NEXT_PUBLIC_BASE_API_PATH }}
        path: ${{ github.workspace }}
        file: env-staging
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: debug
      run: |
        docker build -f Dockerfile.debug -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg NEXT_PUBLIC_BASE_API_PATH=${{ secrets.NEXT_PUBLIC_BASE_API_PATH }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
