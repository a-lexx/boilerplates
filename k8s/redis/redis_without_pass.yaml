#########################################################
# Redis service
#########################################################
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  type: NodePort
  selector:
    app: redis
  ports:
  - name: redis
    protocol: TCP
    port: 6379
    targetPort: 6379
---
#########################################################
# Redis deployment
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.2
        imagePullPolicy: Always
        #args: ["--appendonly", "yes", "--save", "30", "100"] # if new setup
        args: ["--appendonly", "no", "--save", "30", "100"] # 4 current setup
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          limits:
            cpu: 200m
            memory: 600Mi
          requests:
            cpu: 100m
            memory: 100Mi
        readinessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 15
          periodSeconds: 20
        ports:
          - containerPort: 6379
            name: redis
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redisdb-pvc
#### redis exporter ###
#      - name: redis-exporter
#        image: oliver006/redis_exporter:latest
#        ports:
#          - containerPort: 9121
#            name: redis-exporter
#        resources:
#          requests:
#            cpu: 100m
#            memory: 100Mi
#          limits:
#            cpu: 200m
#            memory: 200Mi
